les types 
carcas
terrain agricole 
deplux
studio
address user
status


<!-- Features Buttons -->
<div class="form-group col-12 mx-2 my-2 d-flex flex-wrap container">
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="ascenseur">{% trans 'Ascenseur' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="balcon">{% trans 'Balcon' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="cave">{% trans 'Cave' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="garage">{% trans 'Garage' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="gardien">{% trans 'Gardien' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="interphone">{% trans 'Interphone' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="meuble">{% trans 'Meublé' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="parking_exterieur">{% trans 'Parking Extérieur' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="parking_sous_sol">{% trans 'Parking Sous-sol' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="salle_deau">{% trans 'Salle d\'eau' %}</button>
    <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill mx-1 my-1 feature-btn" data-value="terrasse">{% trans 'Terrasse' %}</button>
</div>
<!-- Hidden Input for Features -->
<input type="hidden" id="features" name="features" value="">
<!-- Filter Button -->


    <script>
                    document.addEventListener('DOMContentLoaded', function() {
                        const featureButtons = document.querySelectorAll('.feature-btn');
                        const featuresInput = document.getElementById('features');
                        const selectedFeatures = new Set();
            
                        featureButtons.forEach(button => {
                            button.addEventListener('click', function() {
                                const feature = this.getAttribute('data-value');
                                if (selectedFeatures.has(feature)) {
                                    selectedFeatures.delete(feature);
                                    this.classList.remove('active');
                                } else {
                                    selectedFeatures.add(feature);
                                    this.classList.add('active');
                                }
                                // Update hidden input with selected features
                                featuresInput.value = Array.from(selectedFeatures).join(',');
                            });
                        });
                    });
                </script>
            



neighborhood_info = models.TextField(verbose_name=_("Neighborhood Information"), blank=True, null=True)
payment_options = models.CharField(
    verbose_name=_("Payment Options"), max_length=100, default="Cash"
)